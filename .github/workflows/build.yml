name: MSBuild - Multi-Arch

on:
  push:
    branches:
      - main  # Run build only when code is accepted to main
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x86, x64, ARM, ARM64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      run: nuget restore GTFractals.sln

    - name: Build Solution
      run: msbuild GTFractals.sln /m /p:Configuration=Release /p:Platform=${{ matrix.platform }} /t:GTFractals /verbosity:minimal

    - name: Debug file structure (if build fails)
      if: failure()
      run: Get-ChildItem -Recurse D:\a\GTFractals\GTFractals\
      shell: pwsh

    - name: Create artifacts directory
      run: mkdir -p artifacts
      shell: pwsh

    - name: Copy Executables
      run: |
        $exePath = "GTFractals\${{ matrix.platform }}\Release\GTFractals.exe"
        if (Test-Path $exePath) {
          Copy-Item -Path $exePath -Destination "artifacts/GTFractals_${{ matrix.platform }}.exe"
        } else {
          Write-Host "ERROR: File not found -> $exePath"
          exit 1
        }
      shell: pwsh

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: GTFractals-${{ matrix.platform }}
        path: artifacts/GTFractals_${{ matrix.platform }}.exe
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
